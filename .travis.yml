language: rust
rust:
  - nightly

os:
  - linux
  - osx
  - windows

matrix:
  include:
  - os: linux
    env: BUILD_ANDROID=true
    allow_failure: true


before_install:
  - cargo install cargo-prune --force
  - if [ "$BUILD_ANDROID" == true ]; then
      ./install-ndk.sh;
      export NDK_HOME=`pwd`/NDK;
      ${NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch arm64 --install-dir "${NDK_HOME}/arm64";
      ${NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch arm --install-dir "${NDK_HOME}/arm";
      ${NDK_HOME}/build/tools/make_standalone_toolchain.py --api 26 --arch x86 --install-dir "${NDK_HOME}/x86";
      rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android;
    fi

install:
  - if [ "$BUILD_ANDROID" == true ]; then
        ./compile-android.sh;
    else
        cargo build --release --bin;
        cargo build --release --lib;
    fi


script:
  - cargo test --verbose --release


before_cache:
  - cargo prune

cache:
  cargo: true
